<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/install.css">
    <title>Package Information</title>
</head>
<body>

    <div class="form-container">
        <p>Package Name:</p>
        <input type="text" name="name" id="name" placeholder="name">

        <p>Version:</p>
        <input type="text" name="version" id="version" placeholder="1.0.0">

        <p>Description:</p>
        <input type="text" name="description" id="description" placeholder="This is an example package">

        <p>Author:</p>
        <input type="text" name="author" id="author" placeholder="Author Name">

        <p>Dependencies:</p>
        <input type="text" name="dependencies" id="dependencies" placeholder="dependency1, dependency2">
        
        <p>URL on GitHub repository:</p>
        <input type="url" name="repository_url" id="repository_url" placeholder="https://github.com/user/repo">
        <p id="url-error" class="error-message"></p>

        <button class="btn" id="install">Выгрузить</button>
    </div>
</body>
</html>
<script>
    document.getElementById('repository_url').addEventListener('input', function() {
        const urlField = document.getElementById('repository_url');
        const errorField = document.getElementById('url-error');
        const urlValue = urlField.value;

        if (urlValue && !urlValue.startsWith('http://') && !urlValue.startsWith('https://')) {
            errorField.textContent = 'Неправильная ссылка';
            errorField.style.color = 'red';
        } else {
            errorField.textContent = '';
        }
    });

    document.getElementById('install').addEventListener('click', function(event) {
        const fields = ['name', 'version', 'description', 'author', 'dependencies', 'repository_url'];
        let allFieldsFilled = true;

        fields.forEach(field => {
            const fieldElement = document.getElementById(field);
            if (fieldElement && !fieldElement.value) {
                allFieldsFilled = false;
            }
        });

        if (!allFieldsFilled) {
            event.preventDefault();
            this.style.backgroundColor = 'red';
        } else {
            this.style.backgroundColor = '';
            saveDataToFile();
        }
    });

    function saveDataToFile() {
        const data = {
            name: document.getElementById('name').value,
            version: document.getElementById('version').value,
            description: document.getElementById('description').value,
            author: document.getElementById('author').value,
            dependencies: document.getElementById('dependencies').value,
            repository_url: document.getElementById('repository_url').value
        };

        fetch('/save-custom', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.text())
        .then(responseText => {
            alert(responseText);
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
</script>
